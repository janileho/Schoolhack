"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
self["webpackHotUpdate_N_E"]("app/page",{

/***/ "(app-pages-browser)/./src/components/Desktop.tsx":
/*!************************************!*\
  !*** ./src/components/Desktop.tsx ***!
  \************************************/
/***/ (function(module, __webpack_exports__, __webpack_require__) {

eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": function() { return /* binding */ Desktop; }\n/* harmony export */ });\n/* harmony import */ var react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react/jsx-dev-runtime */ \"(app-pages-browser)/./node_modules/next/dist/compiled/react/jsx-dev-runtime.js\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! react */ \"(app-pages-browser)/./node_modules/next/dist/compiled/react/index.js\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_1__);\n/* harmony import */ var framer_motion__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! framer-motion */ \"(app-pages-browser)/./node_modules/framer-motion/dist/es/components/AnimatePresence/index.mjs\");\n/* harmony import */ var _AICombat__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./AICombat */ \"(app-pages-browser)/./src/components/AICombat.tsx\");\n/* harmony import */ var _Header__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./Header */ \"(app-pages-browser)/./src/components/Header.tsx\");\n/* harmony import */ var _ReviewMessage__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./ReviewMessage */ \"(app-pages-browser)/./src/components/ReviewMessage.tsx\");\n/* harmony import */ var _DevModeBanner__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./DevModeBanner */ \"(app-pages-browser)/./src/components/DevModeBanner.tsx\");\n/* harmony import */ var _AssignmentList__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ./AssignmentList */ \"(app-pages-browser)/./src/components/AssignmentList.tsx\");\n/* harmony import */ var _AssignmentDetail__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ./AssignmentDetail */ \"(app-pages-browser)/./src/components/AssignmentDetail.tsx\");\n/* harmony import */ var _data_assignmentData__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ../data/assignmentData */ \"(app-pages-browser)/./src/data/assignmentData.ts\");\n\nvar _s = $RefreshSig$();\n\n\n\n\n\n\n\n\n\nfunction Desktop() {\n    _s();\n    const [currentAssignments, setCurrentAssignments] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)(_data_assignmentData__WEBPACK_IMPORTED_MODULE_8__.assignments);\n    const [aiLevel, setAiLevel] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)(1);\n    const [currentResponse, setCurrentResponse] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)(\"\");\n    const [isShaking, setIsShaking] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)(false);\n    const [isTyping, setIsTyping] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)(false);\n    const [currentTypingIndex, setCurrentTypingIndex] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)(0);\n    const [currentTypingText, setCurrentTypingText] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)(\"\");\n    const [whipCount, setWhipCount] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)(0);\n    const [reviewMessage, setReviewMessage] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)(\"\");\n    const [activeAssignment, setActiveAssignment] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)(null);\n    const [usedAnswers, setUsedAnswers] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)({\n        1: [],\n        2: [],\n        3: []\n    });\n    const [combatMode, setCombatMode] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)(false);\n    const [allAssignmentsComplete, setAllAssignmentsComplete] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)(false);\n    const [devMode, setDevMode] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)(false);\n    // Mock sound functions\n    const mockPlay = ()=>console.log(\"Sound played\");\n    const whipSound = {\n        play: mockPlay\n    };\n    const reviewSound = {\n        play: mockPlay\n    };\n    const typingSound = {\n        play: mockPlay\n    };\n    const handleWhipAI = ()=>{\n        setIsShaking(true);\n        whipSound.play();\n        // Update AI level based on whip count - represents how scared the AI is\n        setAiLevel((prev)=>Math.min(prev + 1, 10));\n        setCurrentResponse(_data_assignmentData__WEBPACK_IMPORTED_MODULE_8__.aiResponses[Math.floor(Math.random() * _data_assignmentData__WEBPACK_IMPORTED_MODULE_8__.aiResponses.length)]);\n        setWhipCount((prev)=>prev + 1);\n        // Generate a new answer when whipped\n        if (activeAssignment !== null) {\n            const assignment = currentAssignments.find((a)=>a.id === activeAssignment);\n            if (assignment && !assignment.isReviewing) {\n                // For History assignment (id=2), use random answers\n                if (activeAssignment === 2) {\n                    const wrongAnswers = _data_assignmentData__WEBPACK_IMPORTED_MODULE_8__.assignmentAnswers[activeAssignment].wrong;\n                    const previouslyUsed = usedAnswers[activeAssignment] || [];\n                    const isFirstWhip = whipCount === 1;\n                    // For the first whip, ensure it's wrong\n                    if (isFirstWhip) {\n                        const randomIndex = Math.floor(Math.random() * wrongAnswers.length);\n                        const answer = wrongAnswers[randomIndex];\n                        setCurrentAssignments((prev)=>prev.map((a)=>a.id === activeAssignment ? {\n                                    ...a,\n                                    currentAnswer: \"\",\n                                    answerIndex: randomIndex,\n                                    isCorrect: false,\n                                    hasGeneratedAnswer: true,\n                                    hasBeenReviewed: false\n                                } : a));\n                        // Add this answer index to used answers\n                        setUsedAnswers((prev)=>({\n                                ...prev,\n                                [activeAssignment]: [\n                                    randomIndex\n                                ]\n                            }));\n                        // Start typing the new answer\n                        startTyping(activeAssignment, answer);\n                    } else {\n                        // For subsequent whips, decide randomly if it's correct\n                        // 20% chance of correct answer after first whip\n                        const shouldBeCorrect = Math.random() < 0.2;\n                        if (shouldBeCorrect) {\n                            const answer = _data_assignmentData__WEBPACK_IMPORTED_MODULE_8__.assignmentAnswers[activeAssignment].correct;\n                            setCurrentAssignments((prev)=>prev.map((a)=>a.id === activeAssignment ? {\n                                        ...a,\n                                        currentAnswer: \"\",\n                                        answerIndex: -1,\n                                        isCorrect: true,\n                                        hasGeneratedAnswer: true,\n                                        hasBeenReviewed: false\n                                    } : a));\n                            // Start typing the new answer\n                            startTyping(activeAssignment, answer);\n                        } else {\n                            // Filter out previously used answers for wrong answers\n                            const availableAnswers = wrongAnswers.filter((_, idx)=>!previouslyUsed.includes(idx));\n                            // If all answers have been used, reset the used answers array\n                            if (availableAnswers.length === 0) {\n                                setUsedAnswers((prev)=>({\n                                        ...prev,\n                                        [activeAssignment]: []\n                                    }));\n                                // Use any answer from the wrong answers\n                                const randomIndex = Math.floor(Math.random() * wrongAnswers.length);\n                                const answer = wrongAnswers[randomIndex];\n                                setCurrentAssignments((prev)=>prev.map((a)=>a.id === activeAssignment ? {\n                                            ...a,\n                                            currentAnswer: \"\",\n                                            answerIndex: randomIndex,\n                                            isCorrect: false,\n                                            hasGeneratedAnswer: true,\n                                            hasBeenReviewed: false\n                                        } : a));\n                                // Add this answer index to used answers\n                                setUsedAnswers((prev)=>({\n                                        ...prev,\n                                        [activeAssignment]: [\n                                            randomIndex\n                                        ]\n                                    }));\n                                // Start typing the new answer\n                                startTyping(activeAssignment, answer);\n                            } else {\n                                // Select a random unused answer\n                                const randomIndex = Math.floor(Math.random() * availableAnswers.length);\n                                const originalIndex = wrongAnswers.indexOf(availableAnswers[randomIndex]);\n                                const answer = availableAnswers[randomIndex];\n                                setCurrentAssignments((prev)=>prev.map((a)=>a.id === activeAssignment ? {\n                                            ...a,\n                                            currentAnswer: \"\",\n                                            answerIndex: originalIndex,\n                                            isCorrect: false,\n                                            hasGeneratedAnswer: true,\n                                            hasBeenReviewed: false\n                                        } : a));\n                                // Add this answer index to used answers\n                                setUsedAnswers((prev)=>({\n                                        ...prev,\n                                        [activeAssignment]: [\n                                            ...previouslyUsed,\n                                            originalIndex\n                                        ]\n                                    }));\n                                // Start typing the new answer\n                                startTyping(activeAssignment, answer);\n                            }\n                        }\n                    }\n                } else {\n                    // For other assignments, use the original logic\n                    // Calculate which answer index we should be at based on whip count\n                    const targetIndex = Math.min(Math.floor(whipCount / 2), 5);\n                    const isCorrect = targetIndex === 5;\n                    if (isCorrect) {\n                        // If it's time for the correct answer, use it\n                        const answer = _data_assignmentData__WEBPACK_IMPORTED_MODULE_8__.assignmentAnswers[activeAssignment].correct;\n                        setCurrentAssignments((prev)=>prev.map((a)=>a.id === activeAssignment ? {\n                                    ...a,\n                                    currentAnswer: \"\",\n                                    answerIndex: targetIndex,\n                                    isCorrect: true,\n                                    hasGeneratedAnswer: true,\n                                    hasBeenReviewed: false\n                                } : a));\n                        // Start typing the new answer\n                        startTyping(activeAssignment, answer);\n                    } else {\n                        // For wrong answers, make sure we don't repeat\n                        const wrongAnswers = _data_assignmentData__WEBPACK_IMPORTED_MODULE_8__.assignmentAnswers[activeAssignment].wrong;\n                        const previouslyUsed = usedAnswers[activeAssignment] || [];\n                        // Filter out previously used answers\n                        const availableAnswers = wrongAnswers.filter((_, idx)=>!previouslyUsed.includes(idx));\n                        // If all answers have been used, reset the used answers array\n                        if (availableAnswers.length === 0) {\n                            setUsedAnswers((prev)=>({\n                                    ...prev,\n                                    [activeAssignment]: []\n                                }));\n                            // Use any answer from the wrong answers\n                            const randomIndex = Math.floor(Math.random() * wrongAnswers.length);\n                            const answer = wrongAnswers[randomIndex];\n                            setCurrentAssignments((prev)=>prev.map((a)=>a.id === activeAssignment ? {\n                                        ...a,\n                                        currentAnswer: \"\",\n                                        answerIndex: randomIndex,\n                                        isCorrect: false,\n                                        hasGeneratedAnswer: true,\n                                        hasBeenReviewed: false\n                                    } : a));\n                            // Add this answer index to used answers\n                            setUsedAnswers((prev)=>({\n                                    ...prev,\n                                    [activeAssignment]: [\n                                        randomIndex\n                                    ]\n                                }));\n                            // Start typing the new answer\n                            startTyping(activeAssignment, answer);\n                        } else {\n                            // Select a random unused answer\n                            const randomIndex = Math.floor(Math.random() * availableAnswers.length);\n                            const originalIndex = wrongAnswers.indexOf(availableAnswers[randomIndex]);\n                            const answer = availableAnswers[randomIndex];\n                            setCurrentAssignments((prev)=>prev.map((a)=>a.id === activeAssignment ? {\n                                        ...a,\n                                        currentAnswer: \"\",\n                                        answerIndex: originalIndex,\n                                        isCorrect: false,\n                                        hasGeneratedAnswer: true,\n                                        hasBeenReviewed: false\n                                    } : a));\n                            // Add this answer index to used answers\n                            setUsedAnswers((prev)=>({\n                                    ...prev,\n                                    [activeAssignment]: [\n                                        ...previouslyUsed,\n                                        originalIndex\n                                    ]\n                                }));\n                            // Start typing the new answer\n                            startTyping(activeAssignment, answer);\n                        }\n                    }\n                }\n            }\n        }\n        setTimeout(()=>{\n            setIsShaking(false);\n        }, 500);\n    };\n    const toggleAssignment = (id)=>{\n        setCurrentAssignments((prev)=>prev.map((assignment)=>{\n                if (assignment.id === id) {\n                    const isOpening = !assignment.isOpen;\n                    if (isOpening) {\n                        setActiveAssignment(id);\n                        return {\n                            ...assignment,\n                            isOpen: true\n                        };\n                    } else {\n                        setActiveAssignment(null);\n                        return {\n                            ...assignment,\n                            isOpen: false\n                        };\n                    }\n                }\n                return assignment;\n            }));\n    };\n    const startTyping = (id, answer)=>{\n        setIsTyping(true);\n        setCurrentTypingIndex(0);\n        setCurrentTypingText(\"\");\n        // Calculate typing speed based on AI level (fear level)\n        // Higher AI level (more scared) = faster typing\n        const baseTypingSpeed = 30; // Base typing speed in milliseconds\n        const fearFactor = Math.max(1, aiLevel / 2); // Divide by 2 to make it less extreme\n        const typingSpeed = Math.max(5, baseTypingSpeed / fearFactor); // Minimum 5ms, faster as AI gets more scared\n        const interval = setInterval(()=>{\n            setCurrentTypingIndex((prev)=>{\n                if (prev >= answer.length) {\n                    clearInterval(interval);\n                    setIsTyping(false);\n                    return prev;\n                }\n                // Play typing sound occasionally\n                if (prev % 3 === 0) {\n                    typingSound.play();\n                }\n                return prev + 1;\n            });\n        }, typingSpeed);\n    };\n    const reviewAnswer = (id)=>{\n        const assignment = currentAssignments.find((a)=>a.id === id);\n        if (!assignment || !assignment.hasGeneratedAnswer) return;\n        reviewSound.play();\n        if (assignment.isCorrect) {\n            setReviewMessage(\"Correct! The AI has finally given a proper answer.\");\n            setCurrentAssignments((prev)=>prev.map((a)=>a.id === id ? {\n                        ...a,\n                        isReviewing: true\n                    } : a));\n            // Check if all assignments are now completed\n            const updatedCompletedCount = currentAssignments.filter((a)=>a.isReviewing || a.id === id && assignment.isCorrect).length;\n            setAllAssignmentsComplete(updatedCompletedCount === _data_assignmentData__WEBPACK_IMPORTED_MODULE_8__.assignments.length);\n        } else {\n            setIsShaking(true);\n            setReviewMessage(\"Wrong answer! The AI needs more motivation.\");\n            setCurrentAssignments((prev)=>prev.map((a)=>a.id === id ? {\n                        ...a,\n                        hasBeenReviewed: true\n                    } : a));\n            setTimeout(()=>{\n                setIsShaking(false);\n            }, 500);\n        }\n    };\n    // Update the typing text whenever the index changes\n    (0,react__WEBPACK_IMPORTED_MODULE_1__.useEffect)(()=>{\n        if (isTyping && activeAssignment !== null) {\n            const assignment = currentAssignments.find((a)=>a.id === activeAssignment);\n            if (assignment && assignment.hasGeneratedAnswer) {\n                const answer = assignment.isCorrect ? _data_assignmentData__WEBPACK_IMPORTED_MODULE_8__.assignmentAnswers[activeAssignment].correct : _data_assignmentData__WEBPACK_IMPORTED_MODULE_8__.assignmentAnswers[activeAssignment].wrong[assignment.answerIndex];\n                setCurrentTypingText(answer.substring(0, currentTypingIndex));\n                setCurrentAssignments((prev)=>prev.map((a)=>a.id === activeAssignment ? {\n                            ...a,\n                            currentAnswer: answer.substring(0, currentTypingIndex)\n                        } : a));\n            }\n        }\n    }, [\n        currentTypingIndex,\n        isTyping,\n        activeAssignment,\n        currentAssignments\n    ]);\n    // Check if all assignments are completed\n    (0,react__WEBPACK_IMPORTED_MODULE_1__.useEffect)(()=>{\n        const completedCount = currentAssignments.filter((a)=>a.isReviewing).length;\n        setAllAssignmentsComplete(completedCount === _data_assignmentData__WEBPACK_IMPORTED_MODULE_8__.assignments.length);\n    }, [\n        currentAssignments\n    ]);\n    const handleReturnHomework = ()=>{\n        // Trigger combat mode!\n        setCombatMode(true);\n    };\n    const handleGameOver = ()=>{\n        // Return from combat mode to normal display\n        setCombatMode(false);\n        // Reset assignments for a new game\n        setCurrentAssignments(_data_assignmentData__WEBPACK_IMPORTED_MODULE_8__.assignments.map((a)=>({\n                ...a,\n                isOpen: false,\n                isReviewing: false,\n                currentAnswer: \"\",\n                answerIndex: 0,\n                isCorrect: false,\n                hasGeneratedAnswer: false,\n                hasBeenReviewed: false\n            })));\n        setActiveAssignment(null);\n        setWhipCount(0);\n        setAiLevel(1);\n        setReviewMessage(\"\");\n    };\n    // Toggle developer mode\n    const toggleDevMode = ()=>{\n        setDevMode((prev)=>!prev);\n    };\n    // Find the active assignment object\n    const activeAssignmentObj = activeAssignment !== null ? currentAssignments.find((a)=>a.id === activeAssignment) : null;\n    return /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n        className: \"p-4 \".concat(isShaking ? \"screen-shake\" : \"\"),\n        children: combatMode ? /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(_AICombat__WEBPACK_IMPORTED_MODULE_2__[\"default\"], {\n            onGameOver: handleGameOver\n        }, void 0, false, {\n            fileName: \"C:\\\\Users\\\\Jani\\\\Git Projects\\\\Schoolhack-1\\\\src\\\\components\\\\Desktop.tsx\",\n            lineNumber: 444,\n            columnNumber: 9\n        }, this) : /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.Fragment, {\n            children: [\n                /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(framer_motion__WEBPACK_IMPORTED_MODULE_9__.AnimatePresence, {\n                    children: /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(_Header__WEBPACK_IMPORTED_MODULE_3__[\"default\"], {\n                        activeAssignment: activeAssignment,\n                        aiLevel: aiLevel,\n                        toggleDevMode: toggleDevMode,\n                        toggleAssignment: toggleAssignment\n                    }, void 0, false, {\n                        fileName: \"C:\\\\Users\\\\Jani\\\\Git Projects\\\\Schoolhack-1\\\\src\\\\components\\\\Desktop.tsx\",\n                        lineNumber: 448,\n                        columnNumber: 13\n                    }, this)\n                }, void 0, false, {\n                    fileName: \"C:\\\\Users\\\\Jani\\\\Git Projects\\\\Schoolhack-1\\\\src\\\\components\\\\Desktop.tsx\",\n                    lineNumber: 447,\n                    columnNumber: 11\n                }, this),\n                /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(_ReviewMessage__WEBPACK_IMPORTED_MODULE_4__[\"default\"], {\n                    message: reviewMessage\n                }, void 0, false, {\n                    fileName: \"C:\\\\Users\\\\Jani\\\\Git Projects\\\\Schoolhack-1\\\\src\\\\components\\\\Desktop.tsx\",\n                    lineNumber: 456,\n                    columnNumber: 11\n                }, this),\n                /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(_DevModeBanner__WEBPACK_IMPORTED_MODULE_5__[\"default\"], {\n                    isActive: devMode,\n                    onSkipToCombat: handleReturnHomework\n                }, void 0, false, {\n                    fileName: \"C:\\\\Users\\\\Jani\\\\Git Projects\\\\Schoolhack-1\\\\src\\\\components\\\\Desktop.tsx\",\n                    lineNumber: 458,\n                    columnNumber: 11\n                }, this),\n                /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(framer_motion__WEBPACK_IMPORTED_MODULE_9__.AnimatePresence, {\n                    children: activeAssignment === null ? /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(_AssignmentList__WEBPACK_IMPORTED_MODULE_6__[\"default\"], {\n                        assignments: currentAssignments,\n                        whipCount: whipCount,\n                        allAssignmentsComplete: allAssignmentsComplete,\n                        onOpenAssignment: toggleAssignment,\n                        onReturnHomework: handleReturnHomework\n                    }, void 0, false, {\n                        fileName: \"C:\\\\Users\\\\Jani\\\\Git Projects\\\\Schoolhack-1\\\\src\\\\components\\\\Desktop.tsx\",\n                        lineNumber: 465,\n                        columnNumber: 15\n                    }, this) : activeAssignmentObj ? /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(_AssignmentDetail__WEBPACK_IMPORTED_MODULE_7__[\"default\"], {\n                        assignment: activeAssignmentObj,\n                        isTyping: isTyping,\n                        onReviewAnswer: reviewAnswer,\n                        onWhipAI: handleWhipAI,\n                        onReturnToAssignments: toggleAssignment\n                    }, void 0, false, {\n                        fileName: \"C:\\\\Users\\\\Jani\\\\Git Projects\\\\Schoolhack-1\\\\src\\\\components\\\\Desktop.tsx\",\n                        lineNumber: 473,\n                        columnNumber: 15\n                    }, this) : null\n                }, void 0, false, {\n                    fileName: \"C:\\\\Users\\\\Jani\\\\Git Projects\\\\Schoolhack-1\\\\src\\\\components\\\\Desktop.tsx\",\n                    lineNumber: 463,\n                    columnNumber: 11\n                }, this)\n            ]\n        }, void 0, true)\n    }, void 0, false, {\n        fileName: \"C:\\\\Users\\\\Jani\\\\Git Projects\\\\Schoolhack-1\\\\src\\\\components\\\\Desktop.tsx\",\n        lineNumber: 442,\n        columnNumber: 5\n    }, this);\n}\n_s(Desktop, \"UwnWNApDvJegtgZyp1tu4K9P+YQ=\");\n_c = Desktop;\nvar _c;\n$RefreshReg$(_c, \"Desktop\");\n\n\n;\n    // Wrapped in an IIFE to avoid polluting the global scope\n    ;\n    (function () {\n        var _a, _b;\n        // Legacy CSS implementations will `eval` browser code in a Node.js context\n        // to extract CSS. For backwards compatibility, we need to check we're in a\n        // browser context before continuing.\n        if (typeof self !== 'undefined' &&\n            // AMP / No-JS mode does not inject these helpers:\n            '$RefreshHelpers$' in self) {\n            // @ts-ignore __webpack_module__ is global\n            var currentExports = module.exports;\n            // @ts-ignore __webpack_module__ is global\n            var prevSignature = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevSignature) !== null && _b !== void 0 ? _b : null;\n            // This cannot happen in MainTemplate because the exports mismatch between\n            // templating and execution.\n            self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, module.id);\n            // A module can be accepted automatically based on its exports, e.g. when\n            // it is a Refresh Boundary.\n            if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\n                // Save the previous exports signature on update so we can compare the boundary\n                // signatures. We avoid saving exports themselves since it causes memory leaks (https://github.com/vercel/next.js/pull/53797)\n                module.hot.dispose(function (data) {\n                    data.prevSignature =\n                        self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports);\n                });\n                // Unconditionally accept an update to this module, we'll check if it's\n                // still a Refresh Boundary later.\n                // @ts-ignore importMeta is replaced in the loader\n                module.hot.accept();\n                // This field is set when the previous version of this module was a\n                // Refresh Boundary, letting us know we need to check for invalidation or\n                // enqueue an update.\n                if (prevSignature !== null) {\n                    // A boundary can become ineligible if its exports are incompatible\n                    // with the previous exports.\n                    //\n                    // For example, if you add/remove/change exports, we'll want to\n                    // re-execute the importing modules, and force those components to\n                    // re-render. Similarly, if you convert a class component to a\n                    // function, we want to invalidate the boundary.\n                    if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevSignature, self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports))) {\n                        module.hot.invalidate();\n                    }\n                    else {\n                        self.$RefreshHelpers$.scheduleUpdate();\n                    }\n                }\n            }\n            else {\n                // Since we just executed the code for the module, it's possible that the\n                // new exports made it ineligible for being a boundary.\n                // We only care about the case when we were _previously_ a boundary,\n                // because we already accepted this update (accidental side effect).\n                var isNoLongerABoundary = prevSignature !== null;\n                if (isNoLongerABoundary) {\n                    module.hot.invalidate();\n                }\n            }\n        }\n    })();\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL3NyYy9jb21wb25lbnRzL0Rlc2t0b3AudHN4IiwibWFwcGluZ3MiOiI7Ozs7Ozs7Ozs7Ozs7Ozs7O0FBQW1EO0FBQ0g7QUFDZDtBQUNKO0FBQ2M7QUFDQTtBQUNFO0FBQ0k7QUFFbUM7QUFFdEUsU0FBU2E7O0lBQ3RCLE1BQU0sQ0FBQ0Msb0JBQW9CQyxzQkFBc0IsR0FBR2QsK0NBQVFBLENBQUNTLDZEQUFXQTtJQUN4RSxNQUFNLENBQUNNLFNBQVNDLFdBQVcsR0FBR2hCLCtDQUFRQSxDQUFDO0lBQ3ZDLE1BQU0sQ0FBQ2lCLGlCQUFpQkMsbUJBQW1CLEdBQUdsQiwrQ0FBUUEsQ0FBQztJQUN2RCxNQUFNLENBQUNtQixXQUFXQyxhQUFhLEdBQUdwQiwrQ0FBUUEsQ0FBQztJQUMzQyxNQUFNLENBQUNxQixVQUFVQyxZQUFZLEdBQUd0QiwrQ0FBUUEsQ0FBQztJQUN6QyxNQUFNLENBQUN1QixvQkFBb0JDLHNCQUFzQixHQUFHeEIsK0NBQVFBLENBQUM7SUFDN0QsTUFBTSxDQUFDeUIsbUJBQW1CQyxxQkFBcUIsR0FBRzFCLCtDQUFRQSxDQUFDO0lBQzNELE1BQU0sQ0FBQzJCLFdBQVdDLGFBQWEsR0FBRzVCLCtDQUFRQSxDQUFDO0lBQzNDLE1BQU0sQ0FBQzZCLGVBQWVDLGlCQUFpQixHQUFHOUIsK0NBQVFBLENBQUM7SUFDbkQsTUFBTSxDQUFDK0Isa0JBQWtCQyxvQkFBb0IsR0FBR2hDLCtDQUFRQSxDQUFnQjtJQUN4RSxNQUFNLENBQUNpQyxhQUFhQyxlQUFlLEdBQUdsQywrQ0FBUUEsQ0FBYztRQUFDLEdBQUcsRUFBRTtRQUFFLEdBQUcsRUFBRTtRQUFFLEdBQUcsRUFBRTtJQUFBO0lBQ2hGLE1BQU0sQ0FBQ21DLFlBQVlDLGNBQWMsR0FBR3BDLCtDQUFRQSxDQUFDO0lBQzdDLE1BQU0sQ0FBQ3FDLHdCQUF3QkMsMEJBQTBCLEdBQUd0QywrQ0FBUUEsQ0FBQztJQUNyRSxNQUFNLENBQUN1QyxTQUFTQyxXQUFXLEdBQUd4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QWdCO1FBQ3BCNUQsV0FBV1MsQ0FBQUEsT0FBUSxDQUFDQTtJQUN0QjtJQUVBLG9DQUFvQztJQUNwQyxNQUFNb0Qsc0JBQXNCdEUscUJBQXFCLE9BQzdDbEIsbUJBQW1CMkMsSUFBSSxDQUFDQyxDQUFBQSxJQUFLQSxFQUFFQyxFQUFFLEtBQUszQixvQkFDdEM7SUFFSixxQkFDRSw4REFBQ3VFO1FBQUlDLFdBQVcsT0FBdUMsT0FBaENwRixZQUFZLGlCQUFpQjtrQkFDakRnQiwyQkFDQyw4REFBQ2hDLGlEQUFRQTtZQUFDcUcsWUFBWUw7Ozs7O2lDQUV0Qjs7OEJBQ0UsOERBQUNqRywwREFBZUE7OEJBQ2QsNEVBQUNFLCtDQUFNQTt3QkFDTDJCLGtCQUFrQkE7d0JBQ2xCaEIsU0FBU0E7d0JBQ1RxRixlQUFlQTt3QkFDZmhCLGtCQUFrQkE7Ozs7Ozs7Ozs7OzhCQUl0Qiw4REFBQy9FLHNEQUFhQTtvQkFBQ29HLFNBQVM1RTs7Ozs7OzhCQUV4Qiw4REFBQ3ZCLHNEQUFhQTtvQkFDWm9HLFVBQVVuRTtvQkFDVm9FLGdCQUFnQlQ7Ozs7Ozs4QkFHbEIsOERBQUNoRywwREFBZUE7OEJBQ2I2QixxQkFBcUIscUJBQ3BCLDhEQUFDeEIsdURBQWNBO3dCQUNiRSxhQUFhSTt3QkFDYmMsV0FBV0E7d0JBQ1hVLHdCQUF3QkE7d0JBQ3hCdUUsa0JBQWtCeEI7d0JBQ2xCeUIsa0JBQWtCWDs7Ozs7K0JBRWxCRyxvQ0FDRiw4REFBQzdGLHlEQUFnQkE7d0JBQ2YrQyxZQUFZOEM7d0JBQ1poRixVQUFVQTt3QkFDVnlGLGdCQUFnQmhCO3dCQUNoQmlCLFVBQVUvRDt3QkFDVmdFLHVCQUF1QjVCOzs7OzsrQkFFdkI7Ozs7Ozs7Ozs7Ozs7QUFNaEI7R0ExZHdCeEU7S0FBQUEiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9fTl9FLy4vc3JjL2NvbXBvbmVudHMvRGVza3RvcC50c3g/MGY2NyJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgUmVhY3QsIHsgdXNlU3RhdGUsIHVzZUVmZmVjdCB9IGZyb20gJ3JlYWN0JztcbmltcG9ydCB7IEFuaW1hdGVQcmVzZW5jZSB9IGZyb20gJ2ZyYW1lci1tb3Rpb24nO1xuaW1wb3J0IEFJQ29tYmF0IGZyb20gJy4vQUlDb21iYXQnO1xuaW1wb3J0IEhlYWRlciBmcm9tICcuL0hlYWRlcic7XG5pbXBvcnQgUmV2aWV3TWVzc2FnZSBmcm9tICcuL1Jldmlld01lc3NhZ2UnO1xuaW1wb3J0IERldk1vZGVCYW5uZXIgZnJvbSAnLi9EZXZNb2RlQmFubmVyJztcbmltcG9ydCBBc3NpZ25tZW50TGlzdCBmcm9tICcuL0Fzc2lnbm1lbnRMaXN0JztcbmltcG9ydCBBc3NpZ25tZW50RGV0YWlsIGZyb20gJy4vQXNzaWdubWVudERldGFpbCc7XG5pbXBvcnQgeyBBc3NpZ25tZW50LCBVc2VkQW5zd2VycyB9IGZyb20gJy4uL3R5cGVzL2Fzc2lnbm1lbnQnO1xuaW1wb3J0IHsgYXNzaWdubWVudHMsIGFzc2lnbm1lbnRBbnN3ZXJzLCBhaVJlc3BvbnNlcyB9IGZyb20gJy4uL2RhdGEvYXNzaWdubWVudERhdGEnO1xuXG5leHBvcnQgZGVmYXVsdCBmdW5jdGlvbiBEZXNrdG9wKCkge1xuICBjb25zdCBbY3VycmVudEFzc2lnbm1lbnRzLCBzZXRDdXJyZW50QXNzaWdubWVudHNdID0gdXNlU3RhdGUoYXNzaWdubWVudHMpO1xuICBjb25zdCBbYWlMZXZlbCwgc2V0QWlMZXZlbF0gPSB1c2VTdGF0ZSgxKTtcbiAgY29uc3QgW2N1cnJlbnRSZXNwb25zZSwgc2V0Q3VycmVudFJlc3BvbnNlXSA9IHVzZVN0YXRlKFwiXCIpO1xuICBjb25zdCBbaXNTaGFraW5nLCBzZXRJc1NoYWtpbmddID0gdXNlU3RhdGUoZmFsc2UpO1xuICBjb25zdCBbaXNUeXBpbmcsIHNldElzVHlwaW5nXSA9IHVzZVN0YXRlKGZhbHNlKTtcbiAgY29uc3QgW2N1cnJlbnRUeXBpbmdJbmRleCwgc2V0Q3VycmVudFR5cGluZ0luZGV4XSA9IHVzZVN0YXRlKDApO1xuICBjb25zdCBbY3VycmVudFR5cGluZ1RleHQsIHNldEN1cnJlbnRUeXBpbmdUZXh0XSA9IHVzZVN0YXRlKFwiXCIpO1xuICBjb25zdCBbd2hpcENvdW50LCBzZXRXaGlwQ291bnRdID0gdXNlU3RhdGUoMCk7XG4gIGNvbnN0IFtyZXZpZXdNZXNzYWdlLCBzZXRSZXZpZXdNZXNzYWdlXSA9IHVzZVN0YXRlKFwiXCIpO1xuICBjb25zdCBbYWN0aXZlQXNzaWdubWVudCwgc2V0QWN0aXZlQXNzaWdubWVudF0gPSB1c2VTdGF0ZTxudW1iZXIgfCBudWxsPihudWxsKTtcbiAgY29uc3QgW3VzZWRBbnN3ZXJzLCBzZXRVc2VkQW5zd2Vyc10gPSB1c2VTdGF0ZTxVc2VkQW5zd2Vycz4oezE6IFtdLCAyOiBbXSwgMzogW119KTtcbiAgY29uc3QgW2NvbWJhdE1vZGUsIHNldENvbWJhdE1vZGVdID0gdXNlU3RhdGUoZmFsc2UpO1xuICBjb25zdCBbYWxsQXNzaWdubWVudHNDb21wbGV0ZSwgc2V0QWxsQXNzaWdubWVudHNDb21wbGV0ZV0gPSB1c2VTdGF0ZShmYWxzZSk7XG4gIGNvbnN0IFtkZXZNb2RlLCBzZXREZXZNb2RlXSA9IHVzZVN0YXRlKGZhbHNlKTtcblxuICAvLyBNb2NrIHNvdW5kIGZ1bmN0aW9uc1xuICBjb25zdCBtb2NrUGxheSA9ICgpID0+IGNvbnNvbGUubG9nKFwiU291bmQgcGxheWVkXCIpO1xuICBcbiAgY29uc3Qgd2hpcFNvdW5kID0ge1xuICAgIHBsYXk6IG1vY2tQbGF5XG4gIH07XG5cbiAgY29uc3QgcmV2aWV3U291bmQgPSB7XG4gICAgcGxheTogbW9ja1BsYXlcbiAgfTtcblxuICBjb25zdCB0eXBpbmdTb3VuZCA9IHtcbiAgICBwbGF5OiBtb2NrUGxheVxuICB9O1xuICBcbiAgY29uc3QgaGFuZGxlV2hpcEFJID0gKCkgPT4ge1xuICAgIHNldElzU2hha2luZyh0cnVlKTtcbiAgICB3aGlwU291bmQucGxheSgpO1xuICAgIC8vIFVwZGF0ZSBBSSBsZXZlbCBiYXNlZCBvbiB3aGlwIGNvdW50IC0gcmVwcmVzZW50cyBob3cgc2NhcmVkIHRoZSBBSSBpc1xuICAgIHNldEFpTGV2ZWwocHJldiA9PiBNYXRoLm1pbihwcmV2ICsgMSwgMTApKTtcbiAgICBzZXRDdXJyZW50UmVzcG9uc2UoYWlSZXNwb25zZXNbTWF0aC5mbG9vcihNYXRoLnJhbmRvbSgpICogYWlSZXNwb25zZXMubGVuZ3RoKV0pO1xuICAgIHNldFdoaXBDb3VudChwcmV2ID0+IHByZXYgKyAxKTtcbiAgICBcbiAgICAvLyBHZW5lcmF0ZSBhIG5ldyBhbnN3ZXIgd2hlbiB3aGlwcGVkXG4gICAgaWYgKGFjdGl2ZUFzc2lnbm1lbnQgIT09IG51bGwpIHtcbiAgICAgIGNvbnN0IGFzc2lnbm1lbnQgPSBjdXJyZW50QXNzaWdubWVudHMuZmluZChhID0+IGEuaWQgPT09IGFjdGl2ZUFzc2lnbm1lbnQpO1xuICAgICAgaWYgKGFzc2lnbm1lbnQgJiYgIWFzc2lnbm1lbnQuaXNSZXZpZXdpbmcpIHtcbiAgICAgICAgLy8gRm9yIEhpc3RvcnkgYXNzaWdubWVudCAoaWQ9MiksIHVzZSByYW5kb20gYW5zd2Vyc1xuICAgICAgICBpZiAoYWN0aXZlQXNzaWdubWVudCA9PT0gMikge1xuICAgICAgICAgIGNvbnN0IHdyb25nQW5zd2VycyA9IGFzc2lnbm1lbnRBbnN3ZXJzW2FjdGl2ZUFzc2lnbm1lbnQgYXMga2V5b2YgdHlwZW9mIGFzc2lnbm1lbnRBbnN3ZXJzXS53cm9uZztcbiAgICAgICAgICBjb25zdCBwcmV2aW91c2x5VXNlZCA9IHVzZWRBbnN3ZXJzW2FjdGl2ZUFzc2lnbm1lbnRdIHx8IFtdO1xuICAgICAgICAgIGNvbnN0IGlzRmlyc3RXaGlwID0gd2hpcENvdW50ID09PSAxO1xuICAgICAgICAgIFxuICAgICAgICAgIC8vIEZvciB0aGUgZmlyc3Qgd2hpcCwgZW5zdXJlIGl0J3Mgd3JvbmdcbiAgICAgICAgICBpZiAoaXNGaXJzdFdoaXApIHtcbiAgICAgICAgICAgIGNvbnN0IHJhbmRvbUluZGV4ID0gTWF0aC5mbG9vcihNYXRoLnJhbmRvbSgpICogd3JvbmdBbnN3ZXJzLmxlbmd0aCk7XG4gICAgICAgICAgICBjb25zdCBhbnN3ZXIgPSB3cm9uZ0Fuc3dlcnNbcmFuZG9tSW5kZXhdO1xuICAgICAgICAgICAgXG4gICAgICAgICAgICBzZXRDdXJyZW50QXNzaWdubWVudHMocHJldiA9PlxuICAgICAgICAgICAgICBwcmV2Lm1hcChhID0+IFxuICAgICAgICAgICAgICAgIGEuaWQgPT09IGFjdGl2ZUFzc2lnbm1lbnQgXG4gICAgICAgICAgICAgICAgICA/IHsgXG4gICAgICAgICAgICAgICAgICAgICAgLi4uYSwgXG4gICAgICAgICAgICAgICAgICAgICAgY3VycmVudEFuc3dlcjogXCJcIixcbiAgICAgICAgICAgICAgICAgICAgICBhbnN3ZXJJbmRleDogcmFuZG9tSW5kZXgsXG4gICAgICAgICAgICAgICAgICAgICAgaXNDb3JyZWN0OiBmYWxzZSxcbiAgICAgICAgICAgICAgICAgICAgICBoYXNHZW5lcmF0ZWRBbnN3ZXI6IHRydWUsXG4gICAgICAgICAgICAgICAgICAgICAgaGFzQmVlblJldmlld2VkOiBmYWxzZVxuICAgICAgICAgICAgICAgICAgICB9IFxuICAgICAgICAgICAgICAgICAgOiBhXG4gICAgICAgICAgICAgIClcbiAgICAgICAgICAgICk7XG4gICAgICAgICAgICBcbiAgICAgICAgICAgIC8vIEFkZCB0aGlzIGFuc3dlciBpbmRleCB0byB1c2VkIGFuc3dlcnNcbiAgICAgICAgICAgIHNldFVzZWRBbnN3ZXJzKHByZXYgPT4gKHtcbiAgICAgICAgICAgICAgLi4ucHJldixcbiAgICAgICAgICAgICAgW2FjdGl2ZUFzc2lnbm1lbnRdOiBbcmFuZG9tSW5kZXhdXG4gICAgICAgICAgICB9KSk7XG4gICAgICAgICAgICBcbiAgICAgICAgICAgIC8vIFN0YXJ0IHR5cGluZyB0aGUgbmV3IGFuc3dlclxuICAgICAgICAgICAgc3RhcnRUeXBpbmcoYWN0aXZlQXNzaWdubWVudCwgYW5zd2VyKTtcbiAgICAgICAgICAgIFxuICAgICAgICAgIH0gZWxzZSB7XG4gICAgICAgICAgICAvLyBGb3Igc3Vic2VxdWVudCB3aGlwcywgZGVjaWRlIHJhbmRvbWx5IGlmIGl0J3MgY29ycmVjdFxuICAgICAgICAgICAgLy8gMjAlIGNoYW5jZSBvZiBjb3JyZWN0IGFuc3dlciBhZnRlciBmaXJzdCB3aGlwXG4gICAgICAgICAgICBjb25zdCBzaG91bGRCZUNvcnJlY3QgPSBNYXRoLnJhbmRvbSgpIDwgMC4yO1xuICAgICAgICAgICAgXG4gICAgICAgICAgICBpZiAoc2hvdWxkQmVDb3JyZWN0KSB7XG4gICAgICAgICAgICAgIGNvbnN0IGFuc3dlciA9IGFzc2lnbm1lbnRBbnN3ZXJzW2FjdGl2ZUFzc2lnbm1lbnQgYXMga2V5b2YgdHlwZW9mIGFzc2lnbm1lbnRBbnN3ZXJzXS5jb3JyZWN0O1xuICAgICAgICAgICAgICBcbiAgICAgICAgICAgICAgc2V0Q3VycmVudEFzc2lnbm1lbnRzKHByZXYgPT5cbiAgICAgICAgICAgICAgICBwcmV2Lm1hcChhID0+IFxuICAgICAgICAgICAgICAgICAgYS5pZCA9PT0gYWN0aXZlQXNzaWdubWVudCBcbiAgICAgICAgICAgICAgICAgICAgPyB7IFxuICAgICAgICAgICAgICAgICAgICAgICAgLi4uYSwgXG4gICAgICAgICAgICAgICAgICAgICAgICBjdXJyZW50QW5zd2VyOiBcIlwiLFxuICAgICAgICAgICAgICAgICAgICAgICAgYW5zd2VySW5kZXg6IC0xLCAvLyBVc2UgLTEgZm9yIGNvcnJlY3QgYW5zd2VyXG4gICAgICAgICAgICAgICAgICAgICAgICBpc0NvcnJlY3Q6IHRydWUsXG4gICAgICAgICAgICAgICAgICAgICAgICBoYXNHZW5lcmF0ZWRBbnN3ZXI6IHRydWUsXG4gICAgICAgICAgICAgICAgICAgICAgICBoYXNCZWVuUmV2aWV3ZWQ6IGZhbHNlXG4gICAgICAgICAgICAgICAgICAgICAgfSBcbiAgICAgICAgICAgICAgICAgICAgOiBhXG4gICAgICAgICAgICAgICAgKVxuICAgICAgICAgICAgICApO1xuICAgICAgICAgICAgICBcbiAgICAgICAgICAgICAgLy8gU3RhcnQgdHlwaW5nIHRoZSBuZXcgYW5zd2VyXG4gICAgICAgICAgICAgIHN0YXJ0VHlwaW5nKGFjdGl2ZUFzc2lnbm1lbnQsIGFuc3dlcik7XG4gICAgICAgICAgICAgIFxuICAgICAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICAgICAgLy8gRmlsdGVyIG91dCBwcmV2aW91c2x5IHVzZWQgYW5zd2VycyBmb3Igd3JvbmcgYW5zd2Vyc1xuICAgICAgICAgICAgICBjb25zdCBhdmFpbGFibGVBbnN3ZXJzID0gd3JvbmdBbnN3ZXJzLmZpbHRlcigoXywgaWR4KSA9PiAhcHJldmlvdXNseVVzZWQuaW5jbHVkZXMoaWR4KSk7XG4gICAgICAgICAgICAgIFxuICAgICAgICAgICAgICAvLyBJZiBhbGwgYW5zd2VycyBoYXZlIGJlZW4gdXNlZCwgcmVzZXQgdGhlIHVzZWQgYW5zd2VycyBhcnJheVxuICAgICAgICAgICAgICBpZiAoYXZhaWxhYmxlQW5zd2Vycy5sZW5ndGggPT09IDApIHtcbiAgICAgICAgICAgICAgICBzZXRVc2VkQW5zd2VycyhwcmV2ID0+ICh7XG4gICAgICAgICAgICAgICAgICAuLi5wcmV2LFxuICAgICAgICAgICAgICAgICAgW2FjdGl2ZUFzc2lnbm1lbnRdOiBbXVxuICAgICAgICAgICAgICAgIH0pKTtcbiAgICAgICAgICAgICAgICBcbiAgICAgICAgICAgICAgICAvLyBVc2UgYW55IGFuc3dlciBmcm9tIHRoZSB3cm9uZyBhbnN3ZXJzXG4gICAgICAgICAgICAgICAgY29uc3QgcmFuZG9tSW5kZXggPSBNYXRoLmZsb29yKE1hdGgucmFuZG9tKCkgKiB3cm9uZ0Fuc3dlcnMubGVuZ3RoKTtcbiAgICAgICAgICAgICAgICBjb25zdCBhbnN3ZXIgPSB3cm9uZ0Fuc3dlcnNbcmFuZG9tSW5kZXhdO1xuICAgICAgICAgICAgICAgIFxuICAgICAgICAgICAgICAgIHNldEN1cnJlbnRBc3NpZ25tZW50cyhwcmV2ID0+XG4gICAgICAgICAgICAgICAgICBwcmV2Lm1hcChhID0+IFxuICAgICAgICAgICAgICAgICAgICBhLmlkID09PSBhY3RpdmVBc3NpZ25tZW50IFxuICAgICAgICAgICAgICAgICAgICAgID8geyBcbiAgICAgICAgICAgICAgICAgICAgICAgICAgLi4uYSwgXG4gICAgICAgICAgICAgICAgICAgICAgICAgIGN1cnJlbnRBbnN3ZXI6IFwiXCIsXG4gICAgICAgICAgICAgICAgICAgICAgICAgIGFuc3dlckluZGV4OiByYW5kb21JbmRleCxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgaXNDb3JyZWN0OiBmYWxzZSxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgaGFzR2VuZXJhdGVkQW5zd2VyOiB0cnVlLFxuICAgICAgICAgICAgICAgICAgICAgICAgICBoYXNCZWVuUmV2aWV3ZWQ6IGZhbHNlXG4gICAgICAgICAgICAgICAgICAgICAgICB9IFxuICAgICAgICAgICAgICAgICAgICAgIDogYVxuICAgICAgICAgICAgICAgICAgKVxuICAgICAgICAgICAgICAgICk7XG4gICAgICAgICAgICAgICAgXG4gICAgICAgICAgICAgICAgLy8gQWRkIHRoaXMgYW5zd2VyIGluZGV4IHRvIHVzZWQgYW5zd2Vyc1xuICAgICAgICAgICAgICAgIHNldFVzZWRBbnN3ZXJzKHByZXYgPT4gKHtcbiAgICAgICAgICAgICAgICAgIC4uLnByZXYsXG4gICAgICAgICAgICAgICAgICBbYWN0aXZlQXNzaWdubWVudF06IFtyYW5kb21JbmRleF1cbiAgICAgICAgICAgICAgICB9KSk7XG4gICAgICAgICAgICAgICAgXG4gICAgICAgICAgICAgICAgLy8gU3RhcnQgdHlwaW5nIHRoZSBuZXcgYW5zd2VyXG4gICAgICAgICAgICAgICAgc3RhcnRUeXBpbmcoYWN0aXZlQXNzaWdubWVudCwgYW5zd2VyKTtcbiAgICAgICAgICAgICAgICBcbiAgICAgICAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICAgICAgICAvLyBTZWxlY3QgYSByYW5kb20gdW51c2VkIGFuc3dlclxuICAgICAgICAgICAgICAgIGNvbnN0IHJhbmRvbUluZGV4ID0gTWF0aC5mbG9vcihNYXRoLnJhbmRvbSgpICogYXZhaWxhYmxlQW5zd2Vycy5sZW5ndGgpO1xuICAgICAgICAgICAgICAgIGNvbnN0IG9yaWdpbmFsSW5kZXggPSB3cm9uZ0Fuc3dlcnMuaW5kZXhPZihhdmFpbGFibGVBbnN3ZXJzW3JhbmRvbUluZGV4XSk7XG4gICAgICAgICAgICAgICAgY29uc3QgYW5zd2VyID0gYXZhaWxhYmxlQW5zd2Vyc1tyYW5kb21JbmRleF07XG4gICAgICAgICAgICAgICAgXG4gICAgICAgICAgICAgICAgc2V0Q3VycmVudEFzc2lnbm1lbnRzKHByZXYgPT5cbiAgICAgICAgICAgICAgICAgIHByZXYubWFwKGEgPT4gXG4gICAgICAgICAgICAgICAgICAgIGEuaWQgPT09IGFjdGl2ZUFzc2lnbm1lbnQgXG4gICAgICAgICAgICAgICAgICAgICAgPyB7IFxuICAgICAgICAgICAgICAgICAgICAgICAgICAuLi5hLCBcbiAgICAgICAgICAgICAgICAgICAgICAgICAgY3VycmVudEFuc3dlcjogXCJcIixcbiAgICAgICAgICAgICAgICAgICAgICAgICAgYW5zd2VySW5kZXg6IG9yaWdpbmFsSW5kZXgsXG4gICAgICAgICAgICAgICAgICAgICAgICAgIGlzQ29ycmVjdDogZmFsc2UsXG4gICAgICAgICAgICAgICAgICAgICAgICAgIGhhc0dlbmVyYXRlZEFuc3dlcjogdHJ1ZSxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgaGFzQmVlblJldmlld2VkOiBmYWxzZVxuICAgICAgICAgICAgICAgICAgICAgICAgfSBcbiAgICAgICAgICAgICAgICAgICAgICA6IGFcbiAgICAgICAgICAgICAgICAgIClcbiAgICAgICAgICAgICAgICApO1xuICAgICAgICAgICAgICAgIFxuICAgICAgICAgICAgICAgIC8vIEFkZCB0aGlzIGFuc3dlciBpbmRleCB0byB1c2VkIGFuc3dlcnNcbiAgICAgICAgICAgICAgICBzZXRVc2VkQW5zd2VycyhwcmV2ID0+ICh7XG4gICAgICAgICAgICAgICAgICAuLi5wcmV2LFxuICAgICAgICAgICAgICAgICAgW2FjdGl2ZUFzc2lnbm1lbnRdOiBbLi4ucHJldmlvdXNseVVzZWQsIG9yaWdpbmFsSW5kZXhdXG4gICAgICAgICAgICAgICAgfSkpO1xuICAgICAgICAgICAgICAgIFxuICAgICAgICAgICAgICAgIC8vIFN0YXJ0IHR5cGluZyB0aGUgbmV3IGFuc3dlclxuICAgICAgICAgICAgICAgIHN0YXJ0VHlwaW5nKGFjdGl2ZUFzc2lnbm1lbnQsIGFuc3dlcik7XG4gICAgICAgICAgICAgIH1cbiAgICAgICAgICAgIH1cbiAgICAgICAgICB9XG4gICAgICAgIH0gZWxzZSB7XG4gICAgICAgICAgLy8gRm9yIG90aGVyIGFzc2lnbm1lbnRzLCB1c2UgdGhlIG9yaWdpbmFsIGxvZ2ljXG4gICAgICAgICAgLy8gQ2FsY3VsYXRlIHdoaWNoIGFuc3dlciBpbmRleCB3ZSBzaG91bGQgYmUgYXQgYmFzZWQgb24gd2hpcCBjb3VudFxuICAgICAgICAgIGNvbnN0IHRhcmdldEluZGV4ID0gTWF0aC5taW4oTWF0aC5mbG9vcih3aGlwQ291bnQgLyAyKSwgNSk7XG4gICAgICAgICAgY29uc3QgaXNDb3JyZWN0ID0gdGFyZ2V0SW5kZXggPT09IDU7XG4gICAgICAgICAgXG4gICAgICAgICAgaWYgKGlzQ29ycmVjdCkge1xuICAgICAgICAgICAgLy8gSWYgaXQncyB0aW1lIGZvciB0aGUgY29ycmVjdCBhbnN3ZXIsIHVzZSBpdFxuICAgICAgICAgICAgY29uc3QgYW5zd2VyID0gYXNzaWdubWVudEFuc3dlcnNbYWN0aXZlQXNzaWdubWVudCBhcyBrZXlvZiB0eXBlb2YgYXNzaWdubWVudEFuc3dlcnNdLmNvcnJlY3Q7XG4gICAgICAgICAgICBcbiAgICAgICAgICAgIHNldEN1cnJlbnRBc3NpZ25tZW50cyhwcmV2ID0+XG4gICAgICAgICAgICAgIHByZXYubWFwKGEgPT4gXG4gICAgICAgICAgICAgICAgYS5pZCA9PT0gYWN0aXZlQXNzaWdubWVudCBcbiAgICAgICAgICAgICAgICAgID8geyBcbiAgICAgICAgICAgICAgICAgICAgICAuLi5hLCBcbiAgICAgICAgICAgICAgICAgICAgICBjdXJyZW50QW5zd2VyOiBcIlwiLFxuICAgICAgICAgICAgICAgICAgICAgIGFuc3dlckluZGV4OiB0YXJnZXRJbmRleCxcbiAgICAgICAgICAgICAgICAgICAgICBpc0NvcnJlY3Q6IHRydWUsXG4gICAgICAgICAgICAgICAgICAgICAgaGFzR2VuZXJhdGVkQW5zd2VyOiB0cnVlLFxuICAgICAgICAgICAgICAgICAgICAgIGhhc0JlZW5SZXZpZXdlZDogZmFsc2VcbiAgICAgICAgICAgICAgICAgICAgfSBcbiAgICAgICAgICAgICAgICAgIDogYVxuICAgICAgICAgICAgICApXG4gICAgICAgICAgICApO1xuICAgICAgICAgICAgXG4gICAgICAgICAgICAvLyBTdGFydCB0eXBpbmcgdGhlIG5ldyBhbnN3ZXJcbiAgICAgICAgICAgIHN0YXJ0VHlwaW5nKGFjdGl2ZUFzc2lnbm1lbnQsIGFuc3dlcik7XG4gICAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICAgIC8vIEZvciB3cm9uZyBhbnN3ZXJzLCBtYWtlIHN1cmUgd2UgZG9uJ3QgcmVwZWF0XG4gICAgICAgICAgICBjb25zdCB3cm9uZ0Fuc3dlcnMgPSBhc3NpZ25tZW50QW5zd2Vyc1thY3RpdmVBc3NpZ25tZW50IGFzIGtleW9mIHR5cGVvZiBhc3NpZ25tZW50QW5zd2Vyc10ud3Jvbmc7XG4gICAgICAgICAgICBjb25zdCBwcmV2aW91c2x5VXNlZCA9IHVzZWRBbnN3ZXJzW2FjdGl2ZUFzc2lnbm1lbnRdIHx8IFtdO1xuICAgICAgICAgICAgXG4gICAgICAgICAgICAvLyBGaWx0ZXIgb3V0IHByZXZpb3VzbHkgdXNlZCBhbnN3ZXJzXG4gICAgICAgICAgICBjb25zdCBhdmFpbGFibGVBbnN3ZXJzID0gd3JvbmdBbnN3ZXJzLmZpbHRlcigoXywgaWR4KSA9PiAhcHJldmlvdXNseVVzZWQuaW5jbHVkZXMoaWR4KSk7XG4gICAgICAgICAgICBcbiAgICAgICAgICAgIC8vIElmIGFsbCBhbnN3ZXJzIGhhdmUgYmVlbiB1c2VkLCByZXNldCB0aGUgdXNlZCBhbnN3ZXJzIGFycmF5XG4gICAgICAgICAgICBpZiAoYXZhaWxhYmxlQW5zd2Vycy5sZW5ndGggPT09IDApIHtcbiAgICAgICAgICAgICAgc2V0VXNlZEFuc3dlcnMocHJldiA9PiAoe1xuICAgICAgICAgICAgICAgIC4uLnByZXYsXG4gICAgICAgICAgICAgICAgW2FjdGl2ZUFzc2lnbm1lbnRdOiBbXVxuICAgICAgICAgICAgICB9KSk7XG4gICAgICAgICAgICAgIFxuICAgICAgICAgICAgICAvLyBVc2UgYW55IGFuc3dlciBmcm9tIHRoZSB3cm9uZyBhbnN3ZXJzXG4gICAgICAgICAgICAgIGNvbnN0IHJhbmRvbUluZGV4ID0gTWF0aC5mbG9vcihNYXRoLnJhbmRvbSgpICogd3JvbmdBbnN3ZXJzLmxlbmd0aCk7XG4gICAgICAgICAgICAgIGNvbnN0IGFuc3dlciA9IHdyb25nQW5zd2Vyc1tyYW5kb21JbmRleF07XG4gICAgICAgICAgICAgIFxuICAgICAgICAgICAgICBzZXRDdXJyZW50QXNzaWdubWVudHMocHJldiA9PlxuICAgICAgICAgICAgICAgIHByZXYubWFwKGEgPT4gXG4gICAgICAgICAgICAgICAgICBhLmlkID09PSBhY3RpdmVBc3NpZ25tZW50IFxuICAgICAgICAgICAgICAgICAgICA/IHsgXG4gICAgICAgICAgICAgICAgICAgICAgICAuLi5hLCBcbiAgICAgICAgICAgICAgICAgICAgICAgIGN1cnJlbnRBbnN3ZXI6IFwiXCIsXG4gICAgICAgICAgICAgICAgICAgICAgICBhbnN3ZXJJbmRleDogcmFuZG9tSW5kZXgsXG4gICAgICAgICAgICAgICAgICAgICAgICBpc0NvcnJlY3Q6IGZhbHNlLFxuICAgICAgICAgICAgICAgICAgICAgICAgaGFzR2VuZXJhdGVkQW5zd2VyOiB0cnVlLFxuICAgICAgICAgICAgICAgICAgICAgICAgaGFzQmVlblJldmlld2VkOiBmYWxzZVxuICAgICAgICAgICAgICAgICAgICAgIH0gXG4gICAgICAgICAgICAgICAgICAgIDogYVxuICAgICAgICAgICAgICAgIClcbiAgICAgICAgICAgICAgKTtcbiAgICAgICAgICAgICAgXG4gICAgICAgICAgICAgIC8vIEFkZCB0aGlzIGFuc3dlciBpbmRleCB0byB1c2VkIGFuc3dlcnNcbiAgICAgICAgICAgICAgc2V0VXNlZEFuc3dlcnMocHJldiA9PiAoe1xuICAgICAgICAgICAgICAgIC4uLnByZXYsXG4gICAgICAgICAgICAgICAgW2FjdGl2ZUFzc2lnbm1lbnRdOiBbcmFuZG9tSW5kZXhdXG4gICAgICAgICAgICAgIH0pKTtcbiAgICAgICAgICAgICAgXG4gICAgICAgICAgICAgIC8vIFN0YXJ0IHR5cGluZyB0aGUgbmV3IGFuc3dlclxuICAgICAgICAgICAgICBzdGFydFR5cGluZyhhY3RpdmVBc3NpZ25tZW50LCBhbnN3ZXIpO1xuICAgICAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICAgICAgLy8gU2VsZWN0IGEgcmFuZG9tIHVudXNlZCBhbnN3ZXJcbiAgICAgICAgICAgICAgY29uc3QgcmFuZG9tSW5kZXggPSBNYXRoLmZsb29yKE1hdGgucmFuZG9tKCkgKiBhdmFpbGFibGVBbnN3ZXJzLmxlbmd0aCk7XG4gICAgICAgICAgICAgIGNvbnN0IG9yaWdpbmFsSW5kZXggPSB3cm9uZ0Fuc3dlcnMuaW5kZXhPZihhdmFpbGFibGVBbnN3ZXJzW3JhbmRvbUluZGV4XSk7XG4gICAgICAgICAgICAgIGNvbnN0IGFuc3dlciA9IGF2YWlsYWJsZUFuc3dlcnNbcmFuZG9tSW5kZXhdO1xuICAgICAgICAgICAgICBcbiAgICAgICAgICAgICAgc2V0Q3VycmVudEFzc2lnbm1lbnRzKHByZXYgPT5cbiAgICAgICAgICAgICAgICBwcmV2Lm1hcChhID0+IFxuICAgICAgICAgICAgICAgICAgYS5pZCA9PT0gYWN0aXZlQXNzaWdubWVudCBcbiAgICAgICAgICAgICAgICAgICAgPyB7IFxuICAgICAgICAgICAgICAgICAgICAgICAgLi4uYSwgXG4gICAgICAgICAgICAgICAgICAgICAgICBjdXJyZW50QW5zd2VyOiBcIlwiLFxuICAgICAgICAgICAgICAgICAgICAgICAgYW5zd2VySW5kZXg6IG9yaWdpbmFsSW5kZXgsXG4gICAgICAgICAgICAgICAgICAgICAgICBpc0NvcnJlY3Q6IGZhbHNlLFxuICAgICAgICAgICAgICAgICAgICAgICAgaGFzR2VuZXJhdGVkQW5zd2VyOiB0cnVlLFxuICAgICAgICAgICAgICAgICAgICAgICAgaGFzQmVlblJldmlld2VkOiBmYWxzZVxuICAgICAgICAgICAgICAgICAgICAgIH0gXG4gICAgICAgICAgICAgICAgICAgIDogYVxuICAgICAgICAgICAgICAgIClcbiAgICAgICAgICAgICAgKTtcbiAgICAgICAgICAgICAgXG4gICAgICAgICAgICAgIC8vIEFkZCB0aGlzIGFuc3dlciBpbmRleCB0byB1c2VkIGFuc3dlcnNcbiAgICAgICAgICAgICAgc2V0VXNlZEFuc3dlcnMocHJldiA9PiAoe1xuICAgICAgICAgICAgICAgIC4uLnByZXYsXG4gICAgICAgICAgICAgICAgW2FjdGl2ZUFzc2lnbm1lbnRdOiBbLi4ucHJldmlvdXNseVVzZWQsIG9yaWdpbmFsSW5kZXhdXG4gICAgICAgICAgICAgIH0pKTtcbiAgICAgICAgICAgICAgXG4gICAgICAgICAgICAgIC8vIFN0YXJ0IHR5cGluZyB0aGUgbmV3IGFuc3dlclxuICAgICAgICAgICAgICBzdGFydFR5cGluZyhhY3RpdmVBc3NpZ25tZW50LCBhbnN3ZXIpO1xuICAgICAgICAgICAgfVxuICAgICAgICAgIH1cbiAgICAgICAgfVxuICAgICAgfVxuICAgIH1cbiAgICBcbiAgICBzZXRUaW1lb3V0KCgpID0+IHtcbiAgICAgIHNldElzU2hha2luZyhmYWxzZSk7XG4gICAgfSwgNTAwKTtcbiAgfTtcblxuICBjb25zdCB0b2dnbGVBc3NpZ25tZW50ID0gKGlkOiBudW1iZXIpID0+IHtcbiAgICBzZXRDdXJyZW50QXNzaWdubWVudHMocHJldiA9PlxuICAgICAgcHJldi5tYXAoYXNzaWdubWVudCA9PiB7XG4gICAgICAgIGlmIChhc3NpZ25tZW50LmlkID09PSBpZCkge1xuICAgICAgICAgIGNvbnN0IGlzT3BlbmluZyA9ICFhc3NpZ25tZW50LmlzT3BlbjtcbiAgICAgICAgICBcbiAgICAgICAgICBpZiAoaXNPcGVuaW5nKSB7XG4gICAgICAgICAgICBzZXRBY3RpdmVBc3NpZ25tZW50KGlkKTtcbiAgICAgICAgICAgIHJldHVybiB7IC4uLmFzc2lnbm1lbnQsIGlzT3BlbjogdHJ1ZSB9O1xuICAgICAgICAgIH0gZWxzZSB7XG4gICAgICAgICAgICBzZXRBY3RpdmVBc3NpZ25tZW50KG51bGwpO1xuICAgICAgICAgICAgcmV0dXJuIHsgLi4uYXNzaWdubWVudCwgaXNPcGVuOiBmYWxzZSB9O1xuICAgICAgICAgIH1cbiAgICAgICAgfVxuICAgICAgICByZXR1cm4gYXNzaWdubWVudDtcbiAgICAgIH0pXG4gICAgKTtcbiAgfTtcblxuICBjb25zdCBzdGFydFR5cGluZyA9IChpZDogbnVtYmVyLCBhbnN3ZXI6IHN0cmluZykgPT4ge1xuICAgIHNldElzVHlwaW5nKHRydWUpO1xuICAgIHNldEN1cnJlbnRUeXBpbmdJbmRleCgwKTtcbiAgICBzZXRDdXJyZW50VHlwaW5nVGV4dChcIlwiKTtcbiAgICBcbiAgICAvLyBDYWxjdWxhdGUgdHlwaW5nIHNwZWVkIGJhc2VkIG9uIEFJIGxldmVsIChmZWFyIGxldmVsKVxuICAgIC8vIEhpZ2hlciBBSSBsZXZlbCAobW9yZSBzY2FyZWQpID0gZmFzdGVyIHR5cGluZ1xuICAgIGNvbnN0IGJhc2VUeXBpbmdTcGVlZCA9IDMwOyAvLyBCYXNlIHR5cGluZyBzcGVlZCBpbiBtaWxsaXNlY29uZHNcbiAgICBjb25zdCBmZWFyRmFjdG9yID0gTWF0aC5tYXgoMSwgYWlMZXZlbCAvIDIpOyAvLyBEaXZpZGUgYnkgMiB0byBtYWtlIGl0IGxlc3MgZXh0cmVtZVxuICAgIGNvbnN0IHR5cGluZ1NwZWVkID0gTWF0aC5tYXgoNSwgYmFzZVR5cGluZ1NwZWVkIC8gZmVhckZhY3Rvcik7IC8vIE1pbmltdW0gNW1zLCBmYXN0ZXIgYXMgQUkgZ2V0cyBtb3JlIHNjYXJlZFxuICAgIFxuICAgIGNvbnN0IGludGVydmFsID0gc2V0SW50ZXJ2YWwoKCkgPT4ge1xuICAgICAgc2V0Q3VycmVudFR5cGluZ0luZGV4KHByZXYgPT4ge1xuICAgICAgICBpZiAocHJldiA+PSBhbnN3ZXIubGVuZ3RoKSB7XG4gICAgICAgICAgY2xlYXJJbnRlcnZhbChpbnRlcnZhbCk7XG4gICAgICAgICAgc2V0SXNUeXBpbmcoZmFsc2UpO1xuICAgICAgICAgIHJldHVybiBwcmV2O1xuICAgICAgICB9XG4gICAgICAgIFxuICAgICAgICAvLyBQbGF5IHR5cGluZyBzb3VuZCBvY2Nhc2lvbmFsbHlcbiAgICAgICAgaWYgKHByZXYgJSAzID09PSAwKSB7XG4gICAgICAgICAgdHlwaW5nU291bmQucGxheSgpO1xuICAgICAgICB9XG4gICAgICAgIFxuICAgICAgICByZXR1cm4gcHJldiArIDE7XG4gICAgICB9KTtcbiAgICB9LCB0eXBpbmdTcGVlZCk7XG4gIH07XG5cbiAgY29uc3QgcmV2aWV3QW5zd2VyID0gKGlkOiBudW1iZXIpID0+IHtcbiAgICBjb25zdCBhc3NpZ25tZW50ID0gY3VycmVudEFzc2lnbm1lbnRzLmZpbmQoYSA9PiBhLmlkID09PSBpZCk7XG4gICAgaWYgKCFhc3NpZ25tZW50IHx8ICFhc3NpZ25tZW50Lmhhc0dlbmVyYXRlZEFuc3dlcikgcmV0dXJuO1xuICAgIFxuICAgIHJldmlld1NvdW5kLnBsYXkoKTtcbiAgICBcbiAgICBpZiAoYXNzaWdubWVudC5pc0NvcnJlY3QpIHtcbiAgICAgIHNldFJldmlld01lc3NhZ2UoXCJDb3JyZWN0ISBUaGUgQUkgaGFzIGZpbmFsbHkgZ2l2ZW4gYSBwcm9wZXIgYW5zd2VyLlwiKTtcbiAgICAgIHNldEN1cnJlbnRBc3NpZ25tZW50cyhwcmV2ID0+XG4gICAgICAgIHByZXYubWFwKGEgPT4gXG4gICAgICAgICAgYS5pZCA9PT0gaWQgPyB7IC4uLmEsIGlzUmV2aWV3aW5nOiB0cnVlIH0gOiBhXG4gICAgICAgIClcbiAgICAgICk7XG4gICAgICBcbiAgICAgIC8vIENoZWNrIGlmIGFsbCBhc3NpZ25tZW50cyBhcmUgbm93IGNvbXBsZXRlZFxuICAgICAgY29uc3QgdXBkYXRlZENvbXBsZXRlZENvdW50ID0gY3VycmVudEFzc2lnbm1lbnRzLmZpbHRlcihhID0+IFxuICAgICAgICBhLmlzUmV2aWV3aW5nIHx8IChhLmlkID09PSBpZCAmJiBhc3NpZ25tZW50LmlzQ29ycmVjdClcbiAgICAgICkubGVuZ3RoO1xuICAgICAgXG4gICAgICBzZXRBbGxBc3NpZ25tZW50c0NvbXBsZXRlKHVwZGF0ZWRDb21wbGV0ZWRDb3VudCA9PT0gYXNzaWdubWVudHMubGVuZ3RoKTtcbiAgICB9IGVsc2Uge1xuICAgICAgc2V0SXNTaGFraW5nKHRydWUpO1xuICAgICAgc2V0UmV2aWV3TWVzc2FnZShcIldyb25nIGFuc3dlciEgVGhlIEFJIG5lZWRzIG1vcmUgbW90aXZhdGlvbi5cIik7XG4gICAgICBzZXRDdXJyZW50QXNzaWdubWVudHMocHJldiA9PlxuICAgICAgICBwcmV2Lm1hcChhID0+IFxuICAgICAgICAgIGEuaWQgPT09IGlkID8geyAuLi5hLCBoYXNCZWVuUmV2aWV3ZWQ6IHRydWUgfSA6IGFcbiAgICAgICAgKVxuICAgICAgKTtcbiAgICAgIHNldFRpbWVvdXQoKCkgPT4ge1xuICAgICAgICBzZXRJc1NoYWtpbmcoZmFsc2UpO1xuICAgICAgfSwgNTAwKTtcbiAgICB9XG4gIH07XG5cbiAgLy8gVXBkYXRlIHRoZSB0eXBpbmcgdGV4dCB3aGVuZXZlciB0aGUgaW5kZXggY2hhbmdlc1xuICB1c2VFZmZlY3QoKCkgPT4ge1xuICAgIGlmIChpc1R5cGluZyAmJiBhY3RpdmVBc3NpZ25tZW50ICE9PSBudWxsKSB7XG4gICAgICBjb25zdCBhc3NpZ25tZW50ID0gY3VycmVudEFzc2lnbm1lbnRzLmZpbmQoYSA9PiBhLmlkID09PSBhY3RpdmVBc3NpZ25tZW50KTtcbiAgICAgIGlmIChhc3NpZ25tZW50ICYmIGFzc2lnbm1lbnQuaGFzR2VuZXJhdGVkQW5zd2VyKSB7XG4gICAgICAgIGNvbnN0IGFuc3dlciA9IGFzc2lnbm1lbnQuaXNDb3JyZWN0IFxuICAgICAgICAgID8gYXNzaWdubWVudEFuc3dlcnNbYWN0aXZlQXNzaWdubWVudCBhcyBrZXlvZiB0eXBlb2YgYXNzaWdubWVudEFuc3dlcnNdLmNvcnJlY3RcbiAgICAgICAgICA6IGFzc2lnbm1lbnRBbnN3ZXJzW2FjdGl2ZUFzc2lnbm1lbnQgYXMga2V5b2YgdHlwZW9mIGFzc2lnbm1lbnRBbnN3ZXJzXS53cm9uZ1thc3NpZ25tZW50LmFuc3dlckluZGV4XTtcbiAgICAgICAgXG4gICAgICAgIHNldEN1cnJlbnRUeXBpbmdUZXh0KGFuc3dlci5zdWJzdHJpbmcoMCwgY3VycmVudFR5cGluZ0luZGV4KSk7XG4gICAgICAgIFxuICAgICAgICBzZXRDdXJyZW50QXNzaWdubWVudHMocHJldiA9PlxuICAgICAgICAgIHByZXYubWFwKGEgPT4gXG4gICAgICAgICAgICBhLmlkID09PSBhY3RpdmVBc3NpZ25tZW50ID8geyAuLi5hLCBjdXJyZW50QW5zd2VyOiBhbnN3ZXIuc3Vic3RyaW5nKDAsIGN1cnJlbnRUeXBpbmdJbmRleCkgfSA6IGFcbiAgICAgICAgICApXG4gICAgICAgICk7XG4gICAgICB9XG4gICAgfVxuICB9LCBbY3VycmVudFR5cGluZ0luZGV4LCBpc1R5cGluZywgYWN0aXZlQXNzaWdubWVudCwgY3VycmVudEFzc2lnbm1lbnRzXSk7XG5cbiAgLy8gQ2hlY2sgaWYgYWxsIGFzc2lnbm1lbnRzIGFyZSBjb21wbGV0ZWRcbiAgdXNlRWZmZWN0KCgpID0+IHtcbiAgICBjb25zdCBjb21wbGV0ZWRDb3VudCA9IGN1cnJlbnRBc3NpZ25tZW50cy5maWx0ZXIoYSA9PiBhLmlzUmV2aWV3aW5nKS5sZW5ndGg7XG4gICAgc2V0QWxsQXNzaWdubWVudHNDb21wbGV0ZShjb21wbGV0ZWRDb3VudCA9PT0gYXNzaWdubWVudHMubGVuZ3RoKTtcbiAgfSwgW2N1cnJlbnRBc3NpZ25tZW50c10pO1xuXG4gIGNvbnN0IGhhbmRsZVJldHVybkhvbWV3b3JrID0gKCkgPT4ge1xuICAgIC8vIFRyaWdnZXIgY29tYmF0IG1vZGUhXG4gICAgc2V0Q29tYmF0TW9kZSh0cnVlKTtcbiAgfTtcblxuICBjb25zdCBoYW5kbGVHYW1lT3ZlciA9ICgpID0+IHtcbiAgICAvLyBSZXR1cm4gZnJvbSBjb21iYXQgbW9kZSB0byBub3JtYWwgZGlzcGxheVxuICAgIHNldENvbWJhdE1vZGUoZmFsc2UpO1xuICAgIFxuICAgIC8vIFJlc2V0IGFzc2lnbm1lbnRzIGZvciBhIG5ldyBnYW1lXG4gICAgc2V0Q3VycmVudEFzc2lnbm1lbnRzKGFzc2lnbm1lbnRzLm1hcChhID0+ICh7XG4gICAgICAuLi5hLFxuICAgICAgaXNPcGVuOiBmYWxzZSxcbiAgICAgIGlzUmV2aWV3aW5nOiBmYWxzZSxcbiAgICAgIGN1cnJlbnRBbnN3ZXI6IFwiXCIsXG4gICAgICBhbnN3ZXJJbmRleDogMCxcbiAgICAgIGlzQ29ycmVjdDogZmFsc2UsXG4gICAgICBoYXNHZW5lcmF0ZWRBbnN3ZXI6IGZhbHNlLFxuICAgICAgaGFzQmVlblJldmlld2VkOiBmYWxzZVxuICAgIH0pKSk7XG4gICAgXG4gICAgc2V0QWN0aXZlQXNzaWdubWVudChudWxsKTtcbiAgICBzZXRXaGlwQ291bnQoMCk7XG4gICAgc2V0QWlMZXZlbCgxKTtcbiAgICBzZXRSZXZpZXdNZXNzYWdlKFwiXCIpO1xuICB9O1xuXG4gIC8vIFRvZ2dsZSBkZXZlbG9wZXIgbW9kZVxuICBjb25zdCB0b2dnbGVEZXZNb2RlID0gKCkgPT4ge1xuICAgIHNldERldk1vZGUocHJldiA9PiAhcHJldik7XG4gIH07XG5cbiAgLy8gRmluZCB0aGUgYWN0aXZlIGFzc2lnbm1lbnQgb2JqZWN0XG4gIGNvbnN0IGFjdGl2ZUFzc2lnbm1lbnRPYmogPSBhY3RpdmVBc3NpZ25tZW50ICE9PSBudWxsIFxuICAgID8gY3VycmVudEFzc2lnbm1lbnRzLmZpbmQoYSA9PiBhLmlkID09PSBhY3RpdmVBc3NpZ25tZW50KSBcbiAgICA6IG51bGw7XG5cbiAgcmV0dXJuIChcbiAgICA8ZGl2IGNsYXNzTmFtZT17YHAtNCAke2lzU2hha2luZyA/ICdzY3JlZW4tc2hha2UnIDogJyd9YH0+XG4gICAgICB7Y29tYmF0TW9kZSA/IChcbiAgICAgICAgPEFJQ29tYmF0IG9uR2FtZU92ZXI9e2hhbmRsZUdhbWVPdmVyfSAvPlxuICAgICAgKSA6IChcbiAgICAgICAgPD5cbiAgICAgICAgICA8QW5pbWF0ZVByZXNlbmNlPlxuICAgICAgICAgICAgPEhlYWRlciBcbiAgICAgICAgICAgICAgYWN0aXZlQXNzaWdubWVudD17YWN0aXZlQXNzaWdubWVudH1cbiAgICAgICAgICAgICAgYWlMZXZlbD17YWlMZXZlbH1cbiAgICAgICAgICAgICAgdG9nZ2xlRGV2TW9kZT17dG9nZ2xlRGV2TW9kZX1cbiAgICAgICAgICAgICAgdG9nZ2xlQXNzaWdubWVudD17dG9nZ2xlQXNzaWdubWVudH1cbiAgICAgICAgICAgIC8+XG4gICAgICAgICAgPC9BbmltYXRlUHJlc2VuY2U+XG5cbiAgICAgICAgICA8UmV2aWV3TWVzc2FnZSBtZXNzYWdlPXtyZXZpZXdNZXNzYWdlfSAvPlxuXG4gICAgICAgICAgPERldk1vZGVCYW5uZXIgXG4gICAgICAgICAgICBpc0FjdGl2ZT17ZGV2TW9kZX1cbiAgICAgICAgICAgIG9uU2tpcFRvQ29tYmF0PXtoYW5kbGVSZXR1cm5Ib21ld29ya31cbiAgICAgICAgICAvPlxuXG4gICAgICAgICAgPEFuaW1hdGVQcmVzZW5jZT5cbiAgICAgICAgICAgIHthY3RpdmVBc3NpZ25tZW50ID09PSBudWxsID8gKFxuICAgICAgICAgICAgICA8QXNzaWdubWVudExpc3QgXG4gICAgICAgICAgICAgICAgYXNzaWdubWVudHM9e2N1cnJlbnRBc3NpZ25tZW50c31cbiAgICAgICAgICAgICAgICB3aGlwQ291bnQ9e3doaXBDb3VudH1cbiAgICAgICAgICAgICAgICBhbGxBc3NpZ25tZW50c0NvbXBsZXRlPXthbGxBc3NpZ25tZW50c0NvbXBsZXRlfVxuICAgICAgICAgICAgICAgIG9uT3BlbkFzc2lnbm1lbnQ9e3RvZ2dsZUFzc2lnbm1lbnR9XG4gICAgICAgICAgICAgICAgb25SZXR1cm5Ib21ld29yaz17aGFuZGxlUmV0dXJuSG9tZXdvcmt9XG4gICAgICAgICAgICAgIC8+XG4gICAgICAgICAgICApIDogYWN0aXZlQXNzaWdubWVudE9iaiA/IChcbiAgICAgICAgICAgICAgPEFzc2lnbm1lbnREZXRhaWwgXG4gICAgICAgICAgICAgICAgYXNzaWdubWVudD17YWN0aXZlQXNzaWdubWVudE9ian1cbiAgICAgICAgICAgICAgICBpc1R5cGluZz17aXNUeXBpbmd9XG4gICAgICAgICAgICAgICAgb25SZXZpZXdBbnN3ZXI9e3Jldmlld0Fuc3dlcn1cbiAgICAgICAgICAgICAgICBvbldoaXBBST17aGFuZGxlV2hpcEFJfVxuICAgICAgICAgICAgICAgIG9uUmV0dXJuVG9Bc3NpZ25tZW50cz17dG9nZ2xlQXNzaWdubWVudH1cbiAgICAgICAgICAgICAgLz5cbiAgICAgICAgICAgICkgOiBudWxsfVxuICAgICAgICAgIDwvQW5pbWF0ZVByZXNlbmNlPlxuICAgICAgICA8Lz5cbiAgICAgICl9XG4gICAgPC9kaXY+XG4gICk7XG59ICJdLCJuYW1lcyI6WyJSZWFjdCIsInVzZVN0YXRlIiwidXNlRWZmZWN0IiwiQW5pbWF0ZVByZXNlbmNlIiwiQUlDb21iYXQiLCJIZWFkZXIiLCJSZXZpZXdNZXNzYWdlIiwiRGV2TW9kZUJhbm5lciIsIkFzc2lnbm1lbnRMaXN0IiwiQXNzaWdubWVudERldGFpbCIsImFzc2lnbm1lbnRzIiwiYXNzaWdubWVudEFuc3dlcnMiLCJhaVJlc3BvbnNlcyIsIkRlc2t0b3AiLCJjdXJyZW50QXNzaWdubWVudHMiLCJzZXRDdXJyZW50QXNzaWdubWVudHMiLCJhaUxldmVsIiwic2V0QWlMZXZlbCIsImN1cnJlbnRSZXNwb25zZSIsInNldEN1cnJlbnRSZXNwb25zZSIsImlzU2hha2luZyIsInNldElzU2hha2luZyIsImlzVHlwaW5nIiwic2V0SXNUeXBpbmciLCJjdXJyZW50VHlwaW5nSW5kZXgiLCJzZXRDdXJyZW50VHlwaW5nSW5kZXgiLCJjdXJyZW50VHlwaW5nVGV4dCIsInNldEN1cnJlbnRUeXBpbmdUZXh0Iiwid2hpcENvdW50Iiwic2V0V2hpcENvdW50IiwicmV2aWV3TWVzc2FnZSIsInNldFJldmlld01lc3NhZ2UiLCJhY3RpdmVBc3NpZ25tZW50Iiwic2V0QWN0aXZlQXNzaWdubWVudCIsInVzZWRBbnN3ZXJzIiwic2V0VXNlZEFuc3dlcnMiLCJjb21iYXRNb2RlIiwic2V0Q29tYmF0TW9kZSIsImFsbEFzc2lnbm1lbnRzQ29tcGxldGUiLCJzZXRBbGxBc3NpZ25tZW50c0NvbXBsZXRlIiwiZGV2TW9kZSIsInNldERldk1vZGUiLCJtb2NrUGxheSIsImNvbnNvbGUiLCJsb2ciLCJ3aGlwU291bmQiLCJwbGF5IiwicmV2aWV3U291bmQiLCJ0eXBpbmdTb3VuZCIsImhhbmRsZVdoaXBBSSIsInByZXYiLCJNYXRoIiwibWluIiwiZmxvb3IiLCJyYW5kb20iLCJsZW5ndGgiLCJhc3NpZ25tZW50IiwiZmluZCIsImEiLCJpZCIsImlzUmV2aWV3aW5nIiwid3JvbmdBbnN3ZXJzIiwid3JvbmciLCJwcmV2aW91c2x5VXNlZCIsImlzRmlyc3RXaGlwIiwicmFuZG9tSW5kZXgiLCJhbnN3ZXIiLCJtYXAiLCJjdXJyZW50QW5zd2VyIiwiYW5zd2VySW5kZXgiLCJpc0NvcnJlY3QiLCJoYXNHZW5lcmF0ZWRBbnN3ZXIiLCJoYXNCZWVuUmV2aWV3ZWQiLCJzdGFydFR5cGluZyIsInNob3VsZEJlQ29ycmVjdCIsImNvcnJlY3QiLCJhdmFpbGFibGVBbnN3ZXJzIiwiZmlsdGVyIiwiXyIsImlkeCIsImluY2x1ZGVzIiwib3JpZ2luYWxJbmRleCIsImluZGV4T2YiLCJ0YXJnZXRJbmRleCIsInNldFRpbWVvdXQiLCJ0b2dnbGVBc3NpZ25tZW50IiwiaXNPcGVuaW5nIiwiaXNPcGVuIiwiYmFzZVR5cGluZ1NwZWVkIiwiZmVhckZhY3RvciIsIm1heCIsInR5cGluZ1NwZWVkIiwiaW50ZXJ2YWwiLCJzZXRJbnRlcnZhbCIsImNsZWFySW50ZXJ2YWwiLCJyZXZpZXdBbnN3ZXIiLCJ1cGRhdGVkQ29tcGxldGVkQ291bnQiLCJzdWJzdHJpbmciLCJjb21wbGV0ZWRDb3VudCIsImhhbmRsZVJldHVybkhvbWV3b3JrIiwiaGFuZGxlR2FtZU92ZXIiLCJ0b2dnbGVEZXZNb2RlIiwiYWN0aXZlQXNzaWdubWVudE9iaiIsImRpdiIsImNsYXNzTmFtZSIsIm9uR2FtZU92ZXIiLCJtZXNzYWdlIiwiaXNBY3RpdmUiLCJvblNraXBUb0NvbWJhdCIsIm9uT3BlbkFzc2lnbm1lbnQiLCJvblJldHVybkhvbWV3b3JrIiwib25SZXZpZXdBbnN3ZXIiLCJvbldoaXBBSSIsIm9uUmV0dXJuVG9Bc3NpZ25tZW50cyJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(app-pages-browser)/./src/components/Desktop.tsx\n"));

/***/ })

});